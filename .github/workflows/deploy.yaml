name: build-and-deploy
on:
  push:
    branches: [ master ]

env:
  REGISTRY: 127.0.0.1:5000          # if k3s pulls from a remote builder, use its IP:5000
  IMAGE_NAME: Predictions
  # Set to your cluster arch: linux/amd64, linux/arm64, or linux/arm/v7 (Odroid XU4)
  PLATFORM: linux/arm/v7
  BUILDX_CACHE: ${{ github.workspace }}/.buildx-cache


jobs:
  deploy:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
    steps:
      - name: DNS check
        run: |
          getent hosts raw.githubusercontent.com || true
          curl -I https://raw.githubusercontent.com/actions/checkout/v4/action.yml || true
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to local registry
        if: env.REGISTRY != ''
        run: |
          echo "Logging into $REGISTRY if required (no-op for insecure local registry)"
          # For insecure local registry, login may be unnecessary. If needed, add:
          # echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY" -u "$REGISTRY_USERNAME" --password-stdin

      - name: Ensure buildx and cache dir
        run: |
          docker buildx version >/dev/null 2>&1 || docker buildx create --name localbuilder --use
          mkdir -p "$BUILDX_CACHE"

      - name: Build and push image (with cache)
        run: |
          REPO_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          CACHE_FROM=""
          [ -f "$BUILDX_CACHE/index.json" ] && CACHE_FROM="--cache-from type=local,src=$BUILDX_CACHE"
          docker buildx build \
            --platform "$PLATFORM" \
            $CACHE_FROM \
            --cache-to type=local,dest="$BUILDX_CACHE",mode=max \
            --provenance=false \
            -t "$REGISTRY/$REPO_LOWER:${GITHUB_SHA::7}" \
            -t "$REGISTRY/$REPO_LOWER:latest" \
            --push .

      # Ensure kubectl can reach your cluster (runner has ~/.kube/config)
      - name: Rollout update
        run: |
          REPO_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          DEPLOYMENT_NAME=$REPO_LOWER
          # Option A: update an existing Deployment image
          kubectl set image deploy/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=$REGISTRY/$REPO_LOWER:${GITHUB_SHA::7} --record || true
          # Option B: apply your k8s manifests
          # kubectl apply -f k8s/
          kubectl rollout status deploy/$DEPLOYMENT_NAME --timeout=120s || true
          kubectl get pods -o wide

